// license-header java merge-point
// Generated by andromda-jsf cartridge (controllers\ControllerImpl.java.vsl)
package com.systemsjr.motshelo.transaction.web.edit;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import javax.faces.application.FacesMessage;
import javax.faces.application.FacesMessage.Severity;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;

import com.systemsjr.motshelo.instance.member.vo.InstanceMemberVO;
import com.systemsjr.motshelo.instance.vo.MotsheloInstanceVO;
import com.systemsjr.motshelo.transaction.vo.TransactionVO;

/**
 * @see com.systemsjr.motshelo.transaction.web.edit.TransactionEditController
 */
public class TransactionEditControllerImpl
    extends TransactionEditController
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 1351660648251357502L;

    /**
     * @see com.systemsjr.motshelo.transaction.web.edit.TransactionEditController#doInitialiseEditScreen(TransactionVO transactionVO)
     */
    @Override
    public void doInitialiseEditScreen(DoInitialiseEditScreenForm form)
    {
    	TransactionVO transaction = (TransactionVO) FacesContext.getCurrentInstance().getExternalContext().getFlash().get("transactionVO");
    	if(transaction == null)
    	{
    		transaction = form.getTransactionVO();
    	}
    	
    	if(transaction.getMotsheloInstance() == null)
    	{
    		transaction.setMotsheloInstance(new MotsheloInstanceVO());
    	}
    	
    	if(transaction.getInstanceMember() == null)
    	{
    		transaction.setInstanceMember(new InstanceMemberVO());
    	}
    	
    	if(transaction.getId() == null)
    	{
    		transaction.setTransactionDate(new Date());
    	}

        Collection<SelectItem> motsheloInstanceBackingList = new ArrayList<SelectItem>();
        for(MotsheloInstanceVO instance : getMotsheloInstanceService().getAllMotsheloInstances())
        {
        	motsheloInstanceBackingList.add(new SelectItem(instance.getId(), instance.getInstanceName()));
        }
        form.setTransactionVOMotsheloInstanceBackingList(motsheloInstanceBackingList);
        getEditTransactionSaveForm().setTransactionVOMotsheloInstanceBackingList(motsheloInstanceBackingList);
        form.setTransactionVO(transaction);
        getEditTransactionSaveForm().setTransactionVO(transaction);
        
        try {
			updateEditForm();
		} catch (Throwable e) {
			e.printStackTrace();
		}
        
        
    }

    /**
     * @see com.systemsjr.motshelo.transaction.web.edit.TransactionEditController#doNewTransaction()
     */
    @Override
    public void doNewTransaction()
    {
    	TransactionVO transactionVO = new TransactionVO();
    	FacesContext.getCurrentInstance().getExternalContext().getFlash().put("transactionVO", transactionVO);
    }

    /**
     * @see com.systemsjr.motshelo.transaction.web.edit.TransactionEditController#doSaveTransaction()
     */
    @Override
    public void doSaveTransaction()
    {
    	TransactionVO transaction = getEditTransactionSaveForm().getTransactionVO();
    	transaction = getTransactionService().saveTransaction(transaction);

    	Severity severity = FacesMessage.SEVERITY_INFO;
    	String summary = "SUCCESS: ";
    	String details = "Transaction saved.";
    	if(transaction.getId() == null)
    	{
    		severity = FacesMessage.SEVERITY_ERROR;
        	summary = "ERROR: ";
        	details = "Transaction could not be saved.";
    	}
    	FacesContext.getCurrentInstance().addMessage("messages", new FacesMessage(severity, summary, details));
    	
    	FacesContext.getCurrentInstance().getExternalContext().getFlash().put("transactionVO", transaction);
    }

	@Override
	public void updateEditForm() throws Throwable {
		
		TransactionVO transactionVO = getEditTransactionSaveForm().getTransactionVO();
		
		if(transactionVO.getMotsheloInstance() != null) {
			MotsheloInstanceVO instance = getMotsheloInstanceService().findById(transactionVO.getMotsheloInstance().getId());
			Collection<SelectItem> memberBackingList = new ArrayList<SelectItem>();
			for(InstanceMemberVO member : instance.getInstanceMembers())
			{
				memberBackingList.add(new SelectItem(member.getId(), member.getMember().getName() + " " + member.getMember().getSurname()));
			}
			
			getEditTransactionSaveForm().setTransactionVOInstanceMemberBackingList(memberBackingList);
		}
	}

}