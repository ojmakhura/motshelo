// license-header java merge-point
// Generated by andromda-jsf cartridge (controllers\ControllerImpl.java.vsl)
package com.systemsjr.motshelo.instance.period.web.edit;

import java.util.ArrayList;
import java.util.Collection;

import javax.faces.application.FacesMessage;
import javax.faces.application.FacesMessage.Severity;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;

import org.apache.commons.collections4.CollectionUtils;

import com.systemsjr.motshelo.instance.period.InstancePeriodStatus;
import com.systemsjr.motshelo.instance.period.vo.InstancePeriodSearchCriteria;
import com.systemsjr.motshelo.instance.period.vo.InstancePeriodVO;
import com.systemsjr.motshelo.instance.vo.MotsheloInstanceVO;
import com.systemsjr.motshelo.loan.vo.LoanSearchCriteria;
import com.systemsjr.motshelo.loan.vo.LoanVO;

/**
 * @see com.systemsjr.motshelo.instance.period.web.edit.InstancePeriodEditController
 */
public class InstancePeriodEditControllerImpl
    extends InstancePeriodEditController
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -6115851754854078696L;

    

    /**
     * @see com.systemsjr.motshelo.instance.period.web.edit.InstancePeriodEditController#doSaveInstancePeriod()
     */
    @Override
    public void doSaveInstancePeriod()
    {
    	InstancePeriodVO instancePeriodVO = getEditInstancePeriodSaveForm().getInstancePeriodVO();
    	instancePeriodVO.setMotsheloInstance(instancePeriodVO.getMotsheloInstance());
    	instancePeriodVO.setPeriodName("-");
    	instancePeriodVO = getInstancePeriodService().saveInstancePeriod(instancePeriodVO);
    	
    	Severity severity = FacesMessage.SEVERITY_INFO;
    	String summary = "SUCCESS: ";
    	String details = "Motshelo instance period saved.";
    	if(instancePeriodVO.getId() == null)
    	{
    		severity = FacesMessage.SEVERITY_ERROR;
        	summary = "ERROR: ";
        	details = "Motshelo instance period could not be saved.";
    	}
    	FacesContext.getCurrentInstance().addMessage("messages", new FacesMessage(severity, summary, details));
    	
    	getEditInstancePeriodSaveForm().setInstancePeriodVO(instancePeriodVO);
    	FacesContext.getCurrentInstance().getExternalContext().getFlash().put("instancePeriodVO", getEditInstancePeriodSaveForm().getInstancePeriodVO());
    }


    /**
     * @see com.systemsjr.motshelo.instance.period.web.edit.InstancePeriodEditController#doNewInstancePeriod()
     */
    @Override
    public void doNewInstancePeriod()
    {
    	InstancePeriodVO instancePeriodVO = new InstancePeriodVO();
    	getEditInstancePeriodForm().setInstancePeriodVO(instancePeriodVO);
    	getEditInstancePeriodSaveForm().setInstancePeriodVO(instancePeriodVO);
    }

    /**
     * @see com.systemsjr.motshelo.instance.period.web.edit.InstancePeriodEditController#doInitialiseEditScreen(InstancePeriodVO instancePeriodVO)
     */
    @Override
    public void doInitialiseEditScreen(DoInitialiseEditScreenForm form)
    {
    	Collection<MotsheloInstanceVO> motsheloInstances = getMotsheloInstanceService().getAllMotsheloInstances();
    	Collection<SelectItem> instancesBackingList = new ArrayList<SelectItem>();
    	for(MotsheloInstanceVO instance : motsheloInstances)
    	{
    		instancesBackingList.add(new SelectItem(instance.getId(), instance.getInstanceName()));
    	}
    	form.setInstancePeriodVOMotsheloInstanceBackingList(instancesBackingList);
    	getEditInstancePeriodSaveForm().setInstancePeriodVOMotsheloInstanceBackingList(instancesBackingList);
    	
    	InstancePeriodVO instancePeriodVO = (InstancePeriodVO) FacesContext.getCurrentInstance().getExternalContext().getFlash().get("instancePeriodVO");
        if(instancePeriodVO == null) {
        	instancePeriodVO = new InstancePeriodVO();
        }
        
        if(instancePeriodVO.getMotsheloInstance() == null)
        {
        	instancePeriodVO.setMotsheloInstance(new MotsheloInstanceVO());
        }
        
        if(instancePeriodVO.getPreviousPeriod() == null)
        {
        	instancePeriodVO.setPreviousPeriod(new InstancePeriodVO());
        }
        
        if(instancePeriodVO.getNextPeriod() == null)
        {
        	instancePeriodVO.setNextPeriod(new InstancePeriodVO());
        }
        
        form.setInstancePeriodVO(instancePeriodVO);  
        
        try {
			updateEditForm();
		} catch (Throwable e) {
			e.printStackTrace();
		}
    }


	@Override
	public void updateEditForm() throws Throwable {
		MotsheloInstanceVO instanceVO = getEditInstancePeriodForm().getInstancePeriodVO().getMotsheloInstance();
		Collection<SelectItem> nextBackingList = new ArrayList<SelectItem>();
        Collection<SelectItem> previousBackingList = new ArrayList<SelectItem>();
        
        if(instanceVO != null && instanceVO.getId() != null) {
        	InstancePeriodSearchCriteria criteria = new InstancePeriodSearchCriteria();
        	criteria.setMotsheloInstance(instanceVO);
        	Collection<InstancePeriodVO> periods = getInstancePeriodService().searchInstancePeriods(criteria);
        	
	        for(InstancePeriodVO period : periods)
	        {
	        	nextBackingList.add(new SelectItem(period.getId(), period.getPeriodName()));
	        	previousBackingList.add(new SelectItem(period.getId(), period.getPeriodName()));
	        }
        }
        
        getEditInstancePeriodSaveForm().setInstancePeriodVONextPeriodBackingList(nextBackingList);
        getEditInstancePeriodSaveForm().setInstancePeriodVOPreviousPeriodBackingList(previousBackingList);
	}


	@Override
	public void doNewPeriodContributions() throws Throwable {
		Severity severity = FacesMessage.SEVERITY_INFO;
    	String summary = "SUCCESS: ";
    	String details = "Contribution loans created.";
    	
    	InstancePeriodVO instancePeriodVO = getEditInstancePeriodSaveForm().getInstancePeriodVO();
    	LoanSearchCriteria loanCriteria = new LoanSearchCriteria();
    	loanCriteria.setMotsheloInstance(instancePeriodVO.getMotsheloInstance());
    	loanCriteria.setMinDate(instancePeriodVO.getStartDate());
    	loanCriteria.setMaxDate(instancePeriodVO.getEndDate());
    	
    	Collection<LoanVO> loans = getLoanService().searchLoans(loanCriteria);
    	
    	if(!CollectionUtils.isEmpty(loans))
    	{
    		severity = FacesMessage.SEVERITY_ERROR;
        	summary = "FAILED: ";
        	details = "Contribution loans already exists.";
    	}
    	
    	//InstancePeriodVO period = getEditInstancePeriodSaveForm().getInstancePeriodVO();
		loans = new ArrayList<LoanVO>();
		
		for(LoanVO loan : getInstancePeriodService().createPeriodContributions(instancePeriodVO))
		{
			loans.add(getLoanService().saveLoan(loan));			
		}
		
		if(CollectionUtils.isEmpty(loans))
    	{
    		severity = FacesMessage.SEVERITY_ERROR;
        	summary = "FAILED: ";
        	details = "Contribution loans not created.";
    	}
		
		instancePeriodVO = getInstancePeriodService().findById(instancePeriodVO.getId());
		getEditInstancePeriodSaveForm().setInstancePeriodVO(instancePeriodVO);
		FacesContext.getCurrentInstance().getExternalContext().getFlash().put("instancePeriodVO", instancePeriodVO);
		
		FacesContext.getCurrentInstance().addMessage("messages", new FacesMessage(severity, summary, details));
	}


	@Override
	public void doFinaliseInstancePeriod() throws Throwable {
		// TODO Auto-generated method stub
		InstancePeriodVO instancePeriodVO = getEditInstancePeriodSaveForm().getInstancePeriodVO();
		
		instancePeriodVO = getInstancePeriodService().finaliseInstancePeriod(instancePeriodVO);
	
		Severity severity = FacesMessage.SEVERITY_INFO;
    	String summary = "SUCCESS: ";
    	String details = "Instance Period finalised.";
    	FacesContext.getCurrentInstance().addMessage("messages", new FacesMessage(severity, summary, details));
	}

}