// license-header java merge-point
// Generated by andromda-jsf cartridge (controllers\ControllerImpl.java.vsl)
package com.systemsjr.motshelo.instance.web.edit;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.Map;

import javax.faces.application.FacesMessage;
import javax.faces.application.FacesMessage.Severity;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;

import com.systemsjr.motshelo.JsfUtils;
import com.systemsjr.motshelo.instance.member.vo.InstanceMemberVO;
import com.systemsjr.motshelo.instance.vo.MotsheloInstanceVO;
import com.systemsjr.motshelo.loan.LoanStatus;
import com.systemsjr.motshelo.loan.LoanType;
import com.systemsjr.motshelo.loan.vo.LoanSearchCriteria;
import com.systemsjr.motshelo.loan.vo.LoanVO;
import com.systemsjr.motshelo.member.MemberStatus;
import com.systemsjr.motshelo.member.vo.MemberVO;
import com.systemsjr.motshelo.transaction.vo.TransactionVO;
import com.systemsjr.motshelo.vo.MotsheloVO;

/**
 * @see com.systemsjr.motshelo.instance.web.edit.MotsheloInstanceEditController
 */
public class MotsheloInstanceEditControllerImpl
    extends MotsheloInstanceEditController
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 8087502174420736204L;

    /**
     * @see com.systemsjr.motshelo.instance.web.edit.MotsheloInstanceEditController#doSaveMotsheloInstance()
     */
    @Override
    public void doSaveMotsheloInstance()
    {
    	MotsheloInstanceVO motsheloInstanceVO = getEditMotsheloInstanceSaveForm().getMotsheloInstanceVO();
    	motsheloInstanceVO.setMotshelo(motsheloInstanceVO.getMotshelo());
    	motsheloInstanceVO.setInstanceName("-");  	
    	motsheloInstanceVO = getMotsheloInstanceService().saveMotsheloInstance(motsheloInstanceVO);
    	
    	if(motsheloInstanceVO.getId() == null)
    	{
        	JsfUtils.addErrorMessage("ERROR: Motshelo instance could not be saved.");
    	} else {
    		JsfUtils.addErrorMessage("SUCCESS: Motshelo instance saved.");
    	}
    	
    	getEditMotsheloInstanceSaveForm().setMotsheloInstanceVO(motsheloInstanceVO);
    	JsfUtils.getFlash().put("motsheloInstanceVO", motsheloInstanceVO);
    }


    /**
     * @see com.systemsjr.motshelo.instance.web.edit.MotsheloInstanceEditController#doNewMotsheloInstance()
     */
    @Override
    public void doNewMotsheloInstance()
    {
    	MotsheloInstanceVO motsheloInstanceVO = new MotsheloInstanceVO();
    	getEditMotsheloInstanceSaveForm().setMotsheloInstanceVO(motsheloInstanceVO);
    }

    /**
     * @see com.systemsjr.motshelo.instance.web.edit.MotsheloInstanceEditController#doInitialiseEditScreen(MotsheloInstanceVO motsheloInstanceVO)
     */
    @Override
    public void doInitialiseEditScreen(DoInitialiseEditScreenForm form)
    {
    	Collection<MotsheloVO> metshelo = getMotsheloService().getAllMetshelo();
    	Collection<SelectItem> metsheloBackingList = new ArrayList<SelectItem>();
    	for(MotsheloVO motshelo : metshelo)
    	{
    		metsheloBackingList.add(new SelectItem(motshelo.getId(), motshelo.getName()));
    	}
    	form.setMotsheloInstanceVOMotsheloBackingList(metsheloBackingList);
    	getEditMotsheloInstanceSaveForm().setMotsheloInstanceVOMotsheloBackingList(metsheloBackingList);
    	    	
    	MotsheloInstanceVO motsheloInstanceVO = (MotsheloInstanceVO) JsfUtils.getFlash().get("motsheloInstanceVO");
    	if(motsheloInstanceVO == null)
    	{
    		motsheloInstanceVO = new MotsheloInstanceVO();
    	} 
    	
    	if(motsheloInstanceVO.getMotshelo() == null)
    	{
    		motsheloInstanceVO.setMotshelo(new MotsheloVO());
    	}
    	
    	Collection<SelectItem> memberBackingList = new ArrayList<SelectItem>();
    	MotsheloVO motshelo = getMotsheloService().findById(motsheloInstanceVO.getMotshelo().getId());
    	if(motshelo != null) {
	    	for(MemberVO member : motshelo.getMembers())
	    	{
	    		if(member.getStatus() == MemberStatus.ACTIVE) {
	    			memberBackingList.add(new SelectItem(member.getId(), member.getName() + " " + member.getSurname()));
	    		}
	    	}
    	}
    	JsfUtils.getFlash().put("memberBackingList", memberBackingList);
    	JsfUtils.getFlash().put("selectedMember", new MemberVO());
    	
    	form.setMotsheloInstanceVO(motsheloInstanceVO); 
    	
    	LoanVO loanVO = new LoanVO();
    	loanVO.setMotsheloInstance(motsheloInstanceVO);
    	loanVO.setInstanceMember(new InstanceMemberVO());
    	loanVO.setType(LoanType.STANDARD);
    	loanVO.setStatus(LoanStatus.ACTIVE);
    	loanVO.setExpectedEndDate(new Date());
    	JsfUtils.getFlash().put("loanVO", loanVO);
    	
    	TransactionVO transactionVO = new TransactionVO();
    	transactionVO.setMotsheloInstance(motsheloInstanceVO);
    	transactionVO.setTransactionDate(new Date());
    	transactionVO.setInstanceMember(new InstanceMemberVO());
    	JsfUtils.getFlash().put("transactionVO", transactionVO);
    	
    	Collection<SelectItem> instanceMemberBackingList = new ArrayList<SelectItem>();
    	for(InstanceMemberVO instanceMember : motsheloInstanceVO.getInstanceMembers())
    	{
    		MemberVO member = getMemberService().findById(instanceMember.getMember().getId());
    		instanceMemberBackingList.add(new SelectItem(instanceMember.getId(), member.getName() + " " + member.getSurname()));
    	}
    	JsfUtils.getFlash().put("instanceMemberBackingList", instanceMemberBackingList);
    	JsfUtils.getFlash().put("instanceMembers", motsheloInstanceVO.getInstanceMembers());
    	
    	/// Separate loans into contributions and standard loans
    	LoanSearchCriteria criteria = new LoanSearchCriteria();
    	criteria.setMotsheloInstance(motsheloInstanceVO);
    	criteria.setType(LoanType.CONTRIBUTION);
    	Collection<LoanVO> contributions = getLoanService().searchLoans(criteria);
    	
    	criteria.setType(LoanType.STANDARD);
    	Collection<LoanVO> others = getLoanService().searchLoans(criteria);
    	
    	criteria.setType(LoanType.INTERESTFREE);
    	others.addAll(getLoanService().searchLoans(criteria));
    	
    	/*for(LoanVO lv : motsheloInstanceVO.getLoans())
    	{
    		if(lv.getType() == LoanType.CONTRIBUTION)
    		{
    			contributions.add(lv);
    		} else {
    			others.add(lv);
    		}
    	}*/
    	JsfUtils.getFlash().put("loans", others);
    	JsfUtils.getFlash().put("contributions", contributions);
    	JsfUtils.getFlash().put("transactions", motsheloInstanceVO.getTransactions());
    	
    }
    
	@Override
	public void doAddMember(DoAddMemberForm form) throws Throwable {
		MemberVO member = (MemberVO) JsfUtils.getFlash().get("selectedMember");
		member = getMemberService().findById(member.getId());
		InstanceMemberVO instanceMember = new InstanceMemberVO();
		instanceMember.setMember(member);
		instanceMember.setMotsheloInstance(getEditMotsheloInstanceSaveForm().getMotsheloInstanceVO());
		instanceMember.setBalance(new BigDecimal(0.00));
		instanceMember = getInstanceMemberService().saveInstanceMember(instanceMember);
		
		if(instanceMember.getId() != null)
		{
			getEditMotsheloInstanceSaveForm().getMotsheloInstanceVO().getInstanceMembers().add(instanceMember);
		}
		
		Collection<SelectItem> instanceMemberBackingList = (Collection<SelectItem>) JsfUtils.getFlash().get("instanceMemberBackingList");
		instanceMemberBackingList.add(new SelectItem(instanceMember.getId(), member.getName() + " " + member.getSurname()));
	}

	@Override
	public void doAddLoan() throws Throwable {
		LoanVO loanVO = (LoanVO) JsfUtils.getFlash().get("loanVO");
		LoanVO newLoanVO = getLoanService().saveLoan(loanVO);
		if(newLoanVO.getId() != null)
		{
			getEditMotsheloInstanceSaveForm().getMotsheloInstanceVO().getLoans().add(newLoanVO);
		}
		JsfUtils.getFlash().put("motsheloInstanceVO", loanVO.getMotsheloInstance());
		loanVO = new LoanVO();
		loanVO.setExpectedEndDate(new Date());
		loanVO.setStartDate(new Date());
		JsfUtils.getFlash().put("loanVO", loanVO);
	}


	@Override
	public void doUpdateMotsheloInstance() throws Throwable {
		// TODO Auto-generated method stub
		MotsheloInstanceVO motsheloInstanceVO = getMotsheloInstanceService().updateMotsheloInstance(getEditMotsheloInstanceSaveForm().getMotsheloInstanceVO());
		
		Severity severity = FacesMessage.SEVERITY_INFO;
    	String summary = "SUCCESS: ";
    	String details = "Motshelo instance balances updated.";
    	if(motsheloInstanceVO.getId() == null)
    	{
        	details = "Motshelo instance balances not updated.";
    	}
    	FacesContext.getCurrentInstance().addMessage("messages", new FacesMessage(severity, summary, details));
    	JsfUtils.getFlash().put("motsheloInstanceVO", motsheloInstanceVO);
	}


	@Override
	public void doAddTransaction() throws Throwable {
		TransactionVO transactionVO = (TransactionVO) JsfUtils.getFlash().get("transactionVO");
		TransactionVO newTransaction = getTransactionService().saveTransaction(transactionVO);
		if(newTransaction.getId() != null)
		{
			getEditMotsheloInstanceSaveForm().getMotsheloInstanceVO().getTransactions().add(newTransaction);
		}
		JsfUtils.getFlash().put("motsheloInstanceVO", transactionVO.getMotsheloInstance());
		transactionVO = new TransactionVO();
		transactionVO.setTransactionDate(new Date());
		JsfUtils.getFlash().put("transactionVO", transactionVO);
	}
}