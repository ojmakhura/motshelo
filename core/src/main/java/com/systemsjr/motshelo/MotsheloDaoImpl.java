// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 12/04/2018 18:18:01+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.motshelo;

import com.systemsjr.motshelo.loan.vo.LoanVO;
import com.systemsjr.motshelo.member.vo.MemberVO;
import com.systemsjr.motshelo.vo.MotsheloSearchCriteria;
import com.systemsjr.motshelo.vo.MotsheloVO;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.stereotype.Repository;

/**
 * @see Motshelo
 */
@Repository
public class MotsheloDaoImpl
    extends MotsheloDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toMotsheloVO(
        Motshelo source,
        MotsheloVO target)
    {
        // TODO verify behavior of toMotsheloVO
        super.toMotsheloVO(source, target);
        // WARNING! No conversion for target.members (can't convert source.getMembers():com.systemsjr.motshelo.member.Member to java.util.Collection
        target.setMembers(getMemberDao().toMemberVOCollection(source.getMembers()));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MotsheloVO toMotsheloVO(final Motshelo entity)
    {
        // TODO verify behavior of toMotsheloVO
        return super.toMotsheloVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Motshelo loadMotsheloFromMotsheloVO(MotsheloVO motsheloVO)
    {
        // TODO implement loadMotsheloFromMotsheloVO

        /* A typical implementation looks like this:
        if (motsheloVO.getId() == null)
        {
            return  Motshelo.Factory.newInstance();
        }
        else
        {
            return this.load(motsheloVO.getId());
        }
        */
        
        Motshelo motshelo = Motshelo.Factory.newInstance();
        
        if(motsheloVO.getId() != null)
        {
        	motshelo.setId(motsheloVO.getId());
        }
        
        return motshelo;
    }

    /**
     * {@inheritDoc}
     */
    public Motshelo motsheloVOToEntity(MotsheloVO motsheloVO)
    {
        // TODO verify behavior of motsheloVOToEntity
        Motshelo entity = this.loadMotsheloFromMotsheloVO(motsheloVO);
        this.motsheloVOToEntity(motsheloVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void motsheloVOToEntity(
        MotsheloVO source,
        Motshelo target,
        boolean copyIfNull)
    {
        // TODO verify behavior of motsheloVOToEntity
        super.motsheloVOToEntity(source, target, copyIfNull);
    }

	@Override
	protected List<?> handleFindByCriteria(MotsheloSearchCriteria searchCriteria) throws Exception 
	{
    	CriteriaBuilder builder = getSession().getCriteriaBuilder();
    	CriteriaQuery<Motshelo> query = builder.createQuery(Motshelo.class);
    	Root<Motshelo> root = query.from(Motshelo.class);   
		List<Predicate> predicates = new ArrayList<Predicate>();
		
		if(searchCriteria.getName() != null)
		{
			predicates.add(builder.like(root.<String>get("name"), "%" + searchCriteria.getName() + "%"));
		}
		
		if(searchCriteria.getYear() != null)
		{
			predicates.add(builder.equal(root.<Integer>get("year"), searchCriteria.getYear()));
		}

		if(!predicates.isEmpty()) {
			query.where();
	        Predicate[] pr = new Predicate[predicates.size()];
	        predicates.toArray(pr);
	        query.where(pr); 
		}
		
		query.orderBy(builder.desc(root.get("year")));
		TypedQuery<Motshelo> typedQuery = getSession().createQuery(query);
		return typedQuery.getResultList();
	}

	@Override
	public Motshelo memberVOToEntity(MemberVO memberVO) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Motshelo loanVOToEntity(LoanVO loanVO) {
		// TODO Auto-generated method stub
		return null;
	}

}