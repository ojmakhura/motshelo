// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 12/11/2018 17:53:28+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.motshelo.interest;

import com.systemsjr.motshelo.interest.vo.InterestVO;
import org.springframework.stereotype.Repository;

/**
 * @see Interest
 */
@Repository
public class InterestDaoImpl
    extends InterestDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toInterestVO(
        Interest source,
        InterestVO target)
    {
        // TODO verify behavior of toInterestVO
        super.toInterestVO(source, target);
        // WARNING! No conversion for target.loan (can't convert source.getLoan():com.systemsjr.motshelo.loan.Loan to com.systemsjr.motshelo.loan.vo.LoanVO
        if(source.getLoan() != null)
        {
        	target.setLoan(getLoanDao().toLoanVO(source.getLoan()));
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InterestVO toInterestVO(final Interest entity)
    {
        // TODO verify behavior of toInterestVO
        return super.toInterestVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Interest loadInterestFromInterestVO(InterestVO interestVO)
    {
    	
    	Interest interest = Interest.Factory.newInstance();
    	
    	if(interestVO.getId() != null)
    	{
    		interest = this.load(interestVO.getId());
    	}
    	
    	return interest;
    }

    /**
     * {@inheritDoc}
     */
    public Interest interestVOToEntity(InterestVO interestVO)
    {
        // TODO verify behavior of interestVOToEntity
        Interest entity = this.loadInterestFromInterestVO(interestVO);
        this.interestVOToEntity(interestVO, entity, true);
        
        if(interestVO.getLoan() != null)
        {
        	entity.setLoan(getLoanDao().loanVOToEntity(interestVO.getLoan()));
        }
        
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void interestVOToEntity(
        InterestVO source,
        Interest target,
        boolean copyIfNull)
    {
        // TODO verify behavior of interestVOToEntity
        super.interestVOToEntity(source, target, copyIfNull);
    }
}