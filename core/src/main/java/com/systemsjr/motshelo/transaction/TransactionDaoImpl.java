// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 12/04/2018 18:18:01+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.motshelo.transaction;

import com.systemsjr.motshelo.transaction.vo.TransactionVO;
import org.springframework.stereotype.Repository;

/**
 * @see Transaction
 */
@Repository
public class TransactionDaoImpl
    extends TransactionDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toTransactionVO(
        Transaction source,
        TransactionVO target)
    {
        // TODO verify behavior of toTransactionVO
        super.toTransactionVO(source, target);
        // WARNING! No conversion for target.member (can't convert source.getMember():com.systemsjr.motshelo.member.Member to com.systemsjr.motshelo.member.vo.MemberVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionVO toTransactionVO(final Transaction entity)
    {
        // TODO verify behavior of toTransactionVO
        return super.toTransactionVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Transaction loadTransactionFromTransactionVO(TransactionVO transactionVO)
    {
        // TODO implement loadTransactionFromTransactionVO
        throw new UnsupportedOperationException("com.systemsjr.motshelo.transaction.loadTransactionFromTransactionVO(TransactionVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (transactionVO.getId() == null)
        {
            return  Transaction.Factory.newInstance();
        }
        else
        {
            return this.load(transactionVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Transaction transactionVOToEntity(TransactionVO transactionVO)
    {
        // TODO verify behavior of transactionVOToEntity
        Transaction entity = this.loadTransactionFromTransactionVO(transactionVO);
        this.transactionVOToEntity(transactionVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void transactionVOToEntity(
        TransactionVO source,
        Transaction target,
        boolean copyIfNull)
    {
        // TODO verify behavior of transactionVOToEntity
        super.transactionVOToEntity(source, target, copyIfNull);
    }
}